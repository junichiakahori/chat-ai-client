//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatAiClient.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChatAiClient.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap Cancel {
            get {
                object obj = ResourceManager.GetObject("Cancel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap Close {
            get {
                object obj = ResourceManager.GetObject("Close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   (アイコン) に類似した型 System.Drawing.Icon のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Icon Customer_256 {
            get {
                object obj = ResourceManager.GetObject("Customer_256", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap File {
            get {
                object obj = ResourceManager.GetObject("File", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   &lt;/div&gt;
        ///&lt;/body&gt;
        ///&lt;/html&gt; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string footer_txt {
            get {
                return ResourceManager.GetString("footer_txt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge, chrome=1&quot;&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///&lt;div id=&quot;response-list&quot;&gt; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string header_txt {
            get {
                return ResourceManager.GetString("header_txt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*!
        ///  Theme: Default
        ///  Description: Original highlight.js style
        ///  Author: (c) Ivan Sagalaev &lt;maniac@softwaremaniacs.org&gt;
        ///  Maintainer: @highlightjs/core-team
        ///  Website: https://highlightjs.org/
        ///  License: see project LICENSE
        ///  Touched: 2021
        ///*/pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs{background:#f3f3f3;color:#444}.hljs-comment{color:#697070}.hljs-punctuation,.hljs-tag{color:#444a}.hljs-tag .hljs-attr,.hljs-tag .hljs-name{color:#444}.hljs-attribute,.hljs- [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string highlight_min_css {
            get {
                return ResourceManager.GetString("highlight_min_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*!
        ///  Highlight.js v11.7.0 (git: 82688fad18)
        ///  (c) 2006-2022 undefined and other contributors
        ///  License: BSD-3-Clause
        /// */
        ///var hljs=function(){&quot;use strict&quot;;var e={exports:{}};function n(e){
        ///return e instanceof Map?e.clear=e.delete=e.set=()=&gt;{
        ///throw Error(&quot;map is read-only&quot;)}:e instanceof Set&amp;&amp;(e.add=e.clear=e.delete=()=&gt;{
        ///throw Error(&quot;set is read-only&quot;)
        ///}),Object.freeze(e),Object.getOwnPropertyNames(e).forEach((t=&gt;{var a=e[t]
        ///;&quot;object&quot;!=typeof a||Object.isFrozen(a)||n(a)})),e}
        ///e.exports=n,e.export [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string highlight_min_js {
            get {
                return ResourceManager.GetString("highlight_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   html, body {
        ///    height: 100%;
        ///}
        ////* Add background color to the body */
        ///body {
        ///    background-color: rgba(68, 70, 84, 1.0);
        ///    display: flex;
        ///    flex-direction: column;
        ///    justify-content: space-between;
        ///    margin: 0;
        ///}
        ///
        ///select {
        ///    max-width: 100%;
        ///    text-overflow: ellipsis;
        ///}
        ///
        ////* Remove border color from the response list container */
        ///#response-list {
        ///    border: none;
        ///    overflow-y: auto;
        ///    flex: 1;
        ///}
        ///
        ////* Style for each response element in the list */
        ///#response-list .re [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string index_css {
            get {
                return ResourceManager.GetString("index_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   const API_URL = &apos;/&apos;;
        ///const converter = new showdown.Converter();
        ///let promptToRetry = null;
        ///let uniqueIdToRetry = null;
        ///
        ///const submitButton = document.getElementById(&apos;submit-button&apos;);
        ///const regenerateResponseButton = document.getElementById(&apos;regenerate-response-button&apos;);
        ///const promptInput = document.getElementById(&apos;prompt-input&apos;);
        ///const modelSelect = document.getElementById(&apos;model-select&apos;);
        ///const responseList = document.getElementById(&apos;response-list&apos;);
        ///const fileInput = document.getElementById(&quot;whi [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string index_js {
            get {
                return ResourceManager.GetString("index_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*! showdown v 2.1.0 - 21-04-2022 */
        ///!function(){function a(e){&quot;use strict&quot;;var r={omitExtraWLInCodeBlocks:{defaultValue:!1,describe:&quot;Omit the default extra whiteline added to code blocks&quot;,type:&quot;boolean&quot;},noHeaderId:{defaultValue:!1,describe:&quot;Turn on/off generated header id&quot;,type:&quot;boolean&quot;},prefixHeaderId:{defaultValue:!1,describe:&quot;Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic &apos;section-&apos; prefix&quot;,type:&quot;string&quot;},rawPref [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string showdown_min_js {
            get {
                return ResourceManager.GetString("showdown_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap Submit {
            get {
                object obj = ResourceManager.GetObject("Submit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
